{"version":3,"sources":["types/Status.ts","TodosContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodosContext","createContext","todos","selectedTodo","setSelectedTodo","setActiveFilter","query","setQuery","TodoItem","todo","useContext","isTodoSelected","id","className","classNames","completed","title","type","onClick","TodoList","length","map","style","textAlign","TodoFilter","onChange","e","target","value","All","Active","Completed","placeholder","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","errorMessage","setErrorMessage","useEffect","userId","catch","message","finally","href","email","name","App","setTodos","activeFilter","debouncedQuery","setDebouncedQuery","timerId","clearInterval","filterByStatus","useCallback","filterByTitle","toLowerCase","includes","useMemo","filter","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2786b665.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { createContext } from 'react';\nimport { TodosContextType } from './types/TodosContextType';\n\nexport const TodosContext = createContext<TodosContextType>({\n  todos: [],\n  selectedTodo: null,\n  setSelectedTodo: () => {},\n  setActiveFilter: () => {},\n  query: '',\n  setQuery: () => {},\n});\n","import classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodosContext } from '../../TodosContext';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n\n  const isTodoSelected = todo.id === selectedTodo?.id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': isTodoSelected,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      {todo.completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={todo.completed ? 'has-text-success' : 'has-text-danger'}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i\n              className={`far ${isTodoSelected ? 'fa-eye-slash' : 'fa-eye'}`}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport { TodoItem } from '../TodoItem';\nimport { TodosContext } from '../../TodosContext';\n\nexport const TodoList: React.FC = () => {\n  const { todos } = useContext(TodosContext);\n\n  return todos.length > 0 ? (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem key={todo.id} todo={todo} />\n        ))}\n      </tbody>\n    </table>\n  ) : (\n    <p style={{ textAlign: 'center' }}>No matches</p>\n  );\n};\n","import { useContext } from 'react';\nimport { TodosContext } from '../../TodosContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const { setActiveFilter, query, setQuery } = useContext(TodosContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setActiveFilter(e.target.value as Status)}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { TodosContext } from '../../TodosContext';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, setSelectedTodo } = useContext(TodosContext);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    setIsLoading(true);\n    getUser(selectedTodo?.userId)\n      .then(setUser)\n      .catch(e => setErrorMessage(e.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n\n      {!isLoading && errorMessage && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            />\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p>{`Server responded with error: ${errorMessage}`}</p>\n          </div>\n        </div>\n      )}\n\n      {!isLoading && !errorMessage && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useMemo,\n  useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\nimport { getTodos } from './api';\nimport { TodosContext } from './TodosContext';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [activeFilter, setActiveFilter] = useState(Status.All);\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState(query);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(e => setErrorMessage(e.message))\n      .finally(() => setIsLoading(false));\n  }, [activeFilter, debouncedQuery]);\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebouncedQuery(query);\n    }, 1000);\n\n    return () => clearInterval(timerId);\n  }, [query]);\n\n  const filterByStatus = useCallback(todo => {\n    switch (activeFilter) {\n      case Status.Active:\n        return !todo.completed;\n\n      case Status.Completed:\n        return todo.completed;\n\n      case Status.All:\n      default:\n        return true;\n    }\n  }, [activeFilter]);\n\n  const filterByTitle = useCallback(todo => todo.title\n    .toLowerCase()\n    .includes(debouncedQuery.toLowerCase()), [debouncedQuery]);\n\n  const filteredTodos = useMemo(() => todos\n    .filter(todo => filterByStatus(todo))\n    .filter(todo => filterByTitle(todo)),\n  [todos]);\n\n  const value = {\n    todos: filteredTodos,\n    selectedTodo,\n    setSelectedTodo,\n    setActiveFilter,\n    query,\n    setQuery,\n  };\n\n  return (\n    <TodosContext.Provider value={value}>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              {!isLoading && !errorMessage && todos.length > 0 && <TodoList />}\n\n              {errorMessage && <p>{`Server responded with error: ${errorMessage}`}</p>}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </TodosContext.Provider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}